#!/bin/bash
#----------------------------------------------------------------
# Description: Linux Lite Upgrade Script - Home
# About: For Linux Lite 3.- Series only
# Licence: GPLv2 Sharing is Caring
# Author: Jerry Bezencon
# Credits: Misko_2083
# Website: https://www.linuxliteos.com
#----------------------------------------------------------------

# Ensure multi-language support
export LANG=C

# Linux Lite default dialog icon
ic="/usr/share/icons/zenity-llcc.png"

# Check Internet access
if eval "curl -sk google.com" >> /dev/null 2>&1; then
  :  # continue - internet connection check passed
else # Prompt ERROR internet connection check failed and exit
    (zenity --info --width=320 --height=120 --ok-label="Got it!" --title="  Lite Upgrade - No Internet connection detected..." \
            --text="\n<b>Your computer does not seem to be connected to the internet</b> \n \nLinux Lite cannot continue with Lite Upgrade. \nPlease check your Internet connection and try again." --no-wrap)
        exit 0
fi

# Set functions for non-root execution
# The ones that need root go to the other file: lite-upgrade-system-series3

# Create back up directories for Linux Lite 3.0
MKDIRBUPS30() {
    echo "#Creating back up directories..."
    sleep 2
        mkdir -p /home/$USER/.llupgradebackup/3.0
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text="There was an error while\nCreating back up directories!\nUpgrade canceled."
                    exit 1
                        fi
}

# Backup /home/$USER/ select config files on Linux Lite 3.0
BUPHOMEUSER30() {
    echo "#Backing up select home files..."
	chmod 755 /home/$USER/.config/htop/
	chmod 755 /home/$USER/.config/lxterminal/
        cp /home/$USER/.config/lxterminal/lxterminal.conf /home/$USER/.llupgradebackup/3.0
        sleep 2
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text="There was an error while\nBacking up select home files!"
                        fi
}

# Create back up directories for Linux Lite 3.2
MKDIRBUPS32() {
    echo "#Creating back up directories..."
    sleep 2
        mkdir -p /home/$USER/.llupgradebackup/3.2
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text="There was an error while\nCreating back up directories!\nUpgrade canceled."
                    exit 1
                        fi
}

# Backup /home/$USER/ select config files on Linux Lite 3.2
BUPHOMEUSER32() {
    echo "#Backing up select home files..."
	chmod 755 /home/$USER/.config/htop/
	chmod 755 /home/$USER/.config/lxterminal/
        cp /home/$USER/.config/htop/htoprc /home/$USER/.llupgradebackup/3.2
        cp /home/$USER/.config/lxterminal/lxterminal.conf /home/$USER/.llupgradebackup/3.2
        cp /home/$USER/.conky/widget /home/$USER/.llupgradebackup/3.2
        sleep 2
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text="There was an error while\nBacking up select home files!"
                        fi
}

# Add Lite Desktop Widget
ADDCONKY() {
UPDATER=$( stdbuf -oL /bin/bash \-c '(cd ~/ && wget http://repo.linuxliteos.com/upgrade/3.0-3.2/liteconkywidget.tar.gz && tar xvzf liteconkywidget.tar.gz && rm liteconkywidget.tar.gz && sleep 2 )' 2>&1 |
stdbuf -oL sed -n -e 's/^\(.\{128\}\).*/\1/' -e '/\[*$/ s/^/# /p' -e '/\*$/ s/^/# /p' |
zenity --progress --percentage="$PERCENTAGE"  --title="Adding Lite Desktop Widget..." \
--width=600 --auto-close )
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text='There was an error while adding\nthe Lite Desktop Widget!'
             fi
unset UPDATER
}

# Improvements to the Lite Desktop Widget
UPDCONKY() {
UPDATER=$( stdbuf -oL /bin/bash \-c '(sed -i "s/Logged in as.*/${color}Logged in as:   \${alignr}\${color}\$USER"/g ~/.conky/widget && sleep 2 )' 2>&1 |
stdbuf -oL sed -n -e 's/^\(.\{128\}\).*/\1/' -e '/\[*$/ s/^/# /p' -e '/\*$/ s/^/# /p' |
zenity --progress --percentage="$PERCENTAGE"  --title="Updating the Lite Desktop Widget..." \
--width=600 --auto-close )
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text='There was an error while updating\nthe Lite Desktop Widget!'
             fi
unset UPDATER
}

# Execute bash scripts
EXEBASHSCR() {
UPDATER=$( stdbuf -oL /bin/bash \-c '(xfconf-query --channel thunar --property /misc-exec-shell-scripts-by-default --create --type bool --set true && sleep 2 )' 2>&1 |
stdbuf -oL sed -n -e 's/^\(.\{128\}\).*/\1/' -e '/\[*$/ s/^/# /p' -e '/\*$/ s/^/# /p' |
zenity --progress --percentage="$PERCENTAGE"  --title="Adding Execute bash scripts feature..." \
--width=600 --auto-close )
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text='There was an error while adding the\nExecute bash scripts feature!'
             fi
unset UPDATER
}

# Change Notification theme
NOTIFYCH() {
    echo "#Updating to new Notification theme..."
        cp /home/$USER/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-notifyd.xml /home/$USER/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-notifyd.xml.backup
        sed -i '5d' /home/$USER/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-notifyd.xml
        sed -i '5i\ \ <property name="theme" type="string" value="Default"/>' /home/$USER/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-notifyd.xml

        sleep 2
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text="There was an error while\nChanging the Notification theme!"
                        fi
}

# Window snapping & tiling
WINSNAP() {
UPDATER=$( xfconf-query -c xfwm4 -p /general/tile_on_move -s true && xfconf-query -c xfwm4 -p /general/snap_resist -s true && xfconf-query -c xfwm4 -p /general/wrap_windows -s false && sleep 2 |
zenity --progress --percentage=20  --title="Setting Window snapping feature..." \
--width=600 --auto-close)
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text='There was an error while setting\nthe Window snapping feature'
             fi
unset UPDATER
}

# Modify terminal theme, file is: /home/$USER/.config/lxterminal/lxterminal.conf
TERMTHEME() {
    echo "#Updating to new Terminal theme..."
        mv /home/$USER/.config/lxterminal/lxterminal.conf /home/$USER/.config/lxterminal/lxterminal.conf.backup
        touch /home/$USER/.config/lxterminal/lxterminal.conf
        echo "[general]" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "fontname=Monospace 10" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "selchars=-A-Za-z0-9,./?%&#:_" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "scrollback=100000" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "bgcolor=#1A1E1F" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "bgalpha=65535" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "fgcolor=#f0f0f0" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "disallowbold=false" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "cursorblinks=true" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "cursorunderline=false" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "audiblebell=false" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "tabpos=top" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "hidescrollbar=false" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "hidemenubar=false" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "hideclosebutton=false" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "disablef10=true" >> /home/$USER/.config/lxterminal/lxterminal.conf
        echo "disablealt=false" >> /home/$USER/.config/lxterminal/lxterminal.conf
        sleep 2
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text="There was an error while\nChanging the Terminal theme!"
                        fi
}

# Set lite-welcome to autostart on first boot
LITEWELCOME() {
if [ ! -f /home/$USER/.config/autostart/lite_welcome.desktop ]; then
  UPDATER=$( ln -s /usr/share/applications/lite_welcome.desktop /home/$USER/.config/autostart && sleep 2 |
  zenity --progress --percentage=20  --title="Setting Lite Welcome to autostart..." \
         --width=600 --auto-close)
   unset UPDATER
else :; fi 
}

# Change to new HTOP theme, file is: /home/$USER/.config/htop/htoprc
HTOPTHEME() {
    echo "#Updating to new Resource Usage theme..."
        touch /home/$USER/.config/htop/htoprc
        echo "fields=0 48 17 18 38 39 40 2 46 47 49 1" >> /home/$USER/.config/htop/htoprc
        echo "sort_key=46" >> /home/$USER/.config/htop/htoprc
        echo "sort_direction=1" >> /home/$USER/.config/htop/htoprc
        echo "hide_threads=0" >> /home/$USER/.config/htop/htoprc
        echo "hide_kernel_threads=1" >> /home/$USER/.config/htop/htoprc
        echo "hide_userland_threads=0" >> /home/$USER/.config/htop/htoprc
        echo "shadow_other_users=0" >> /home/$USER/.config/htop/htoprc
        echo "show_thread_names=0" >> /home/$USER/.config/htop/htoprc
        echo "show_program_path=1" >> /home/$USER/.config/htop/htoprc
        echo "highlight_base_name=0" >> /home/$USER/.config/htop/htoprc
        echo "highlight_megabytes=1" >> /home/$USER/.config/htop/htoprc
        echo "highlight_threads=1" >> /home/$USER/.config/htop/htoprc
        echo "tree_view=0" >> /home/$USER/.config/htop/htoprc
        echo "header_margin=1" >> /home/$USER/.config/htop/htoprc
        echo "detailed_cpu_time=0" >> /home/$USER/.config/htop/htoprc
        echo "cpu_count_from_zero=0" >> /home/$USER/.config/htop/htoprc
        echo "update_process_names=0" >> /home/$USER/.config/htop/htoprc
        echo "account_guest_in_cpu_meter=0" >> /home/$USER/.config/htop/htoprc
        echo "color_scheme=5" >> /home/$USER/.config/htop/htoprc
        echo "delay=15" >> /home/$USER/.config/htop/htoprc
        echo "left_meters=LeftCPUs2 Memory Swap" >> /home/$USER/.config/htop/htoprc
        echo "left_meter_modes=1 1 1" >> /home/$USER/.config/htop/htoprc
        echo "right_meters=RightCPUs2 Tasks LoadAverage Uptime" >> /home/$USER/.config/htop/htoprc
        echo "right_meter_modes=1 2 2 2" >> /home/$USER/.config/htop/htoprc
        sleep 2
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                        echo "#Error"
                    sleep 2
                                        zenity --error \
                                        --title="Error" --text="There was an error while\nChanging the Resource Usage theme!"
                        fi
}

REBOOT() {
# Reboot dialogue 
# Credit to xunil: http://bbs.archbang.org/viewtopic.php?id=279
title="Linux Lite Upgrade Complete"
exit_type=`zenity  --width="400" --height="220" --title="$title" --list --radiolist --column="Select" \
    --column="Exit Type" --column="Description" \
    TRUE "Reboot" "Reboot your computer"\
    FALSE "Shutdown" "Shutdown your computer"\
    FALSE "Cancel" "Continue using your computer" `

# User must select a target type (Check if they cancelled)
if [ ! "$exit_type" ]; then
    zenity --error --title="Error" --text="You must make a selection"
    zenity --info --title="Linux Lite Upgrade Utility" --text="Upgrade complete.\n\nDon't forget to restart your computer\nto complete the upgrade."
    exit
fi

# Action to perform by user
if [ "$exit_type" = "Reboot" ]
then

        # Do Reboot here
    dbus-send --system --print-reply --dest="org.freedesktop.ConsoleKit" /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Restart

elif [ "$exit_type" = "Shutdown" ]
then
    # Do Shutdown here
    dbus-send --system --print-reply --dest="org.freedesktop.ConsoleKit" /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Stop

else

    # Do Cancel here
    zenity --info --title="Linux Lite Upgrade Utility" --text="Upgrade complete.\n\nDon't forget to restart your computer\nto complete the upgrade."
    exit 0
fi
}

LL30() {
# Invoke arrays
ARRAYA=()       # Array for LL 3.0

#Check the arch
arch=$(uname -m)

case "$arch" in
    x86)    arch="x86"  ;;
    i?86)   arch="x86"  ;;
    amd64)  arch="amd64"    ;;
    x86_64) arch="amd64"    ;;
    * ) echo "Your Arch '$arch' -> Its not supported."  ;;
esac

# Populate arrays based on the arch
case "$arch" in
    x86)
    ARRAYA+=('MKDIRBUPS30')
    ARRAYA+=('BUPHOMEUSER30')
    ARRAYA+=('ADDCONKY')
    ARRAYA+=('EXEBASHSCR')
    ARRAYA+=('NOTIFYCH')
    ARRAYA+=('WINSNAP')
    ARRAYA+=('TERMTHEME')
    ARRAYA+=('LITEWELCOME')
    ARRAYA+=('HTOPTHEME')
    ;;
    amd64)
    ARRAYA+=('MKDIRBUPS30')
    ARRAYA+=('BUPHOMEUSER30')
    ARRAYA+=('ADDCONKY')
    ARRAYA+=('EXEBASHSCR')
    ARRAYA+=('NOTIFYCH')
    ARRAYA+=('WINSNAP')
    ARRAYA+=('TERMTHEME')
    ARRAYA+=('LITEWELCOME')
    ARRAYA+=('HTOPTHEME')
    ;;
esac
}

LL32() {
# Invoke arrays
ARRAYA=()       # Array for LL 3.2

#Check the arch
arch=$(uname -m)

case "$arch" in
    x86)    arch="x86"  ;;
    i?86)   arch="x86"  ;;
    amd64)  arch="amd64"    ;;
    x86_64) arch="amd64"    ;;
    * ) echo "Your Arch '$arch' -> Its not supported."  ;;
esac

# Populate arrays based on the arch
case "$arch" in
    x86)
    ARRAYA+=('MKDIRBUPS32')
    ARRAYA+=('BUPHOMEUSER32')
    ARRAYA+=('UPDCONKY')
    ARRAYA+=('EXEBASHSCR')
    ARRAYA+=('NOTIFYCH')
    ARRAYA+=('WINSNAP')
    ARRAYA+=('TERMTHEME')
    ARRAYA+=('LITEWELCOME')
    ;;
    amd64)
    ARRAYA+=('MKDIRBUPS32')
    ARRAYA+=('BUPHOMEUSER32')
    ARRAYA+=('UPDCONKY')
    ARRAYA+=('EXEBASHSCR')
    ARRAYA+=('NOTIFYCH')
    ARRAYA+=('WINSNAP')
    ARRAYA+=('TERMTHEME')
    ARRAYA+=('LITEWELCOME')
    ;;
esac
}

RUN() {
# Check if ARRAYA is empty
# If it is skip the execution
if [ ${#ARRAYA[@]} -ne 0 ]; then

    x=0
    for k in "${!ARRAYA[@]}"; do  x=$(( $x + 1 )); done  # Get the total number of selected items in array A

    TOTAL_LINES=$x

    printf '%s \n' "${ARRAYA[@]}"|
    while read  line
        do
            $line     # Execute functions one by one
            if [ $? = 1 ]; then
                zenity --error --title="Lite Upgrade" --text="There was an error while performing upgrades:\n ${line}"
                exit 1
            fi    
        let i++
         (( PERCENTAGE = 100 \* ${i} / ${TOTAL_LINES} ))
         echo "$PERCENTAGE"

        if [ "$PERCENTAGE" == "100" ]; then
            echo "#Done"
            sleep 2
        fi
    
    done| zenity --progress  --title="Lite Upgrade" --auto-kill --auto-close --width=300
fi

    gksudo /usr/bin/lite-upgrade-system-series3 "$USER"      # Run the next script with superuser privileges

#LLVER=$(awk '{print $3}' /etc/llver)
if grep "Linux Lite 3.4" /etc/llver; then

    # Set lite-welcome to autostart on first boot
    # LITEWELCOME

    # Call the reboot dialogue
    REBOOT

else
    zenity --info --title="Linux Lite Upgrade Utility" --text="Upgrade canceled."
fi
}

#Check the version and start  the appropriate function
#LLVER=$(awk '{print $3}' /etc/llver)

if grep "Linux Lite 3.0" /etc/llver; then
    LL30
elif grep "Linux Lite 3.2" /etc/llver; then
    LL32
else

    zenity --info --text="You are already running the latest release"
    exit 0
fi

# First dialogue box
zenity --question --title="Linux Lite Upgrade Utility" --window-icon="/usr/share/icons/zenity-llcc.png" \
--text="We will now Upgrade your system to Linux Lite 3.4\n\nPlease ensure you are connected to the internet before you start.\n\nAt the end of this upgrade, please reboot to complete the upgrade process.\n\nClick Yes to continue or No to abort."

# If No is clicked then exit
if [ "${PIPESTATUS[0]}" -ne "0" ]; then
    zenity --info --title='Linux Lite Upgrade Utility' --text='Upgrade cancelled.' --width="250"
      exit 0
fi

RUN

exit 0
